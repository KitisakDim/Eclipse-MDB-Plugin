

HI-TECH Software PIC LITE Macro Assembler V1.00 build 12136 
                                                                                               Thu Jun 21 09:42:28 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 12136
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 12136"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1937
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           	FNCALL	_main,_delay
    49                           	FNCALL	_main,_doMath
    50                           	FNCALL	_doMath,___wmul
    51                           	FNROOT	_main
    52                           	global	_PORTB
    53  000D                     _PORTB	set	0xD
    54                           	global	_TRISB
    55  008D                     _TRISB	set	0x8D
    56                           psect	text71,local,class=CODE,delta=2,merge=1
    57                           global __ptext71
    58  0000                     __ptext71:
    59                           	file	"C:\Users\Donkey\AppData\Local\Temp\srq4."
    60                           	line	#
    61                           psect cinit,class=CODE,delta=2
    62                           global start_initialization
    63  0763                     start_initialization:
    64                           
    65                           psect cinit,class=CODE,delta=2,merge=1
    66                           global end_of_initialization
    67                           
    68                           ;End of C runtime variable initialization code
    69                           
    70  0763                     end_of_initialization:
    71  0763  0020               movlb 0
    72  0764  3187  2F66         ljmp _main	;jump to C main() function
    73                           psect	cstackCOMMON,class=COMMON,space=1
    74                           global __pcstackCOMMON
    75  0070                     __pcstackCOMMON:
    76                           	global	??_delay
    77  0070                     ??_delay:	; 0 bytes @ 0x0
    78                           	global	?_delay
    79  0070                     ?_delay:	; 2 bytes @ 0x0
    80                           	global	?_main
    81  0070                     ?_main:	; 2 bytes @ 0x0
    82                           	global	?___wmul
    83  0070                     ?___wmul:	; 2 bytes @ 0x0
    84                           	global	delay@clock
    85  0070                     delay@clock:	; 2 bytes @ 0x0
    86                           	global	___wmul@multiplier
    87  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
    88  0070                     	ds	2
    89                           	global	delay@counter
    90  0072                     delay@counter:	; 2 bytes @ 0x2
    91                           	global	___wmul@multiplicand
    92  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
    93  0072                     	ds	2
    94                           	global	??___wmul
    95  0074                     ??___wmul:	; 0 bytes @ 0x4
    96                           	global	___wmul@product
    97  0074                     ___wmul@product:	; 2 bytes @ 0x4
    98  0074                     	ds	2
    99                           	global	?_doMath
   100  0076                     ?_doMath:	; 2 bytes @ 0x6
   101  0076                     	ds	2
   102                           	global	??_doMath
   103  0078                     ??_doMath:	; 0 bytes @ 0x8
   104                           	global	??_main
   105  0078                     ??_main:	; 0 bytes @ 0x8
   106                           	global	main@result
   107  0078                     main@result:	; 2 bytes @ 0x8
   108  0078                     	ds	2
   109                           psect	cstackBANK0,class=BANK0,space=1
   110                           global __pcstackBANK0
   111  0020                     __pcstackBANK0:
   112                           	global	doMath@a
   113  0020                     doMath@a:	; 2 bytes @ 0x0
   114  0020                     	ds	2
   115                           	global	doMath@b
   116  0022                     doMath@b:	; 2 bytes @ 0x2
   117  0022                     	ds	2
   118                           	global	doMath@c
   119  0024                     doMath@c:	; 2 bytes @ 0x4
   120  0024                     	ds	2
   121                           	global	doMath@result
   122  0026                     doMath@result:	; 2 bytes @ 0x6
   123  0026                     	ds	2
   124                           ;!
   125                           ;!Data Sizes:
   126                           ;!    Strings     0
   127                           ;!    Constant    0
   128                           ;!    Data        0
   129                           ;!    BSS         0
   130                           ;!    Persistent  0
   131                           ;!    Stack       0
   132                           ;!
   133                           ;!Auto Spaces:
   134                           ;!    Space          Size  Autos    Used
   135                           ;!    COMMON           14     10      10
   136                           ;!    BANK0            80      8       8
   137                           ;!    BANK1            80      0       0
   138                           ;!    BANK2            80      0       0
   139                           ;!    BANK3            80      0       0
   140                           ;!    BANK4            80      0       0
   141                           ;!    BANK5            80      0       0
   142                           ;!    BANK6            16      0       0
   143                           
   144                           ;!
   145                           ;!Pointer List with Targets:
   146                           ;!
   147                           ;!    ?_doMath	int  size(1) Largest target is 0
   148                           ;!
   149                           ;!    ?___wmul	unsigned int  size(1) Largest target is 0
   150                           ;!
   151                           ;!    ?_delay	int  size(1) Largest target is 0
   152                           ;!
   153                           
   154                           
   155                           ;!
   156                           ;!Critical Paths under _main in COMMON
   157                           ;!
   158                           ;!    _main->_doMath
   159                           ;!    _doMath->___wmul
   160                           ;!
   161                           ;!Critical Paths under _main in BANK0
   162                           ;!
   163                           ;!    _main->_doMath
   164                           ;!
   165                           ;!Critical Paths under _main in BANK1
   166                           ;!
   167                           ;!    None.
   168                           ;!
   169                           ;!Critical Paths under _main in BANK2
   170                           ;!
   171                           ;!    None.
   172                           ;!
   173                           ;!Critical Paths under _main in BANK3
   174                           ;!
   175                           ;!    None.
   176                           ;!
   177                           ;!Critical Paths under _main in BANK4
   178                           ;!
   179                           ;!    None.
   180                           ;!
   181                           ;!Critical Paths under _main in BANK5
   182                           ;!
   183                           ;!    None.
   184                           ;!
   185                           ;!Critical Paths under _main in BANK6
   186                           ;!
   187                           ;!    None.
   188                           
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   191 ;;
   192                           
   193                           ;!
   194                           ;!Call Graph Tables:
   195                           ;!
   196                           ;! ---------------------------------------------------------------------------------
   197                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   198                           ;! ---------------------------------------------------------------------------------
   199                           ;! (0) _main                                                 2     2      0     222
   200                           ;!                                              8 COMMON     2     2      0
   201                           ;!                              _delay
   202                           ;!                             _doMath
   203                           ;! ---------------------------------------------------------------------------------
   204                           ;! (1) _delay                                                4     4      0      35
   205                           ;!                                              0 COMMON     4     4      0
   206                           ;! ---------------------------------------------------------------------------------
   207                           ;! (1) _doMath                                              10     8      2     185
   208                           ;!                                              6 COMMON     2     0      2
   209                           ;!                                              0 BANK0      8     8      0
   210                           ;!                             ___wmul
   211                           ;! ---------------------------------------------------------------------------------
   212                           ;! (2) ___wmul                                               6     2      4      92
   213                           ;!                                              0 COMMON     6     2      4
   214                           ;! ---------------------------------------------------------------------------------
   215                           ;! Estimated maximum stack depth 2
   216                           ;! ---------------------------------------------------------------------------------
   217                           ;!
   218                           ;! Call Graph Graphs:
   219                           ;!
   220                           ;! _main (ROOT)
   221                           ;!   _delay
   222                           ;!   _doMath
   223                           ;!     ___wmul
   224                           ;!
   225                           
   226                           ;! Address spaces:
   227                           
   228                           ;!Name               Size   Autos  Total    Cost      Usage
   229                           ;!BIGRAM             1F0      0       0       0        0.0%
   230                           ;!EEDATA             100      0       0       0        0.0%
   231                           ;!NULL                 0      0       0       0        0.0%
   232                           ;!CODE                 0      0       0       0        0.0%
   233                           ;!BITCOMMON            E      0       0       1        0.0%
   234                           ;!BITSFR0              0      0       0       1        0.0%
   235                           ;!SFR0                 0      0       0       1        0.0%
   236                           ;!COMMON               E      A       A       2       71.4%
   237                           ;!BITSFR1              0      0       0       2        0.0%
   238                           ;!SFR1                 0      0       0       2        0.0%
   239                           ;!BITSFR2              0      0       0       3        0.0%
   240                           ;!SFR2                 0      0       0       3        0.0%
   241                           ;!STACK                0      0       2       3        0.0%
   242                           ;!BITSFR3              0      0       0       4        0.0%
   243                           ;!SFR3                 0      0       0       4        0.0%
   244                           ;!ABS                  0      0       0       4        0.0%
   245                           ;!BITBANK0            50      0       0       5        0.0%
   246                           ;!BITSFR4              0      0       0       5        0.0%
   247                           ;!SFR4                 0      0       0       5        0.0%
   248                           ;!BANK0               50      8       8       6       10.0%
   249                           ;!BITSFR5              0      0       0       6        0.0%
   250                           ;!SFR5                 0      0       0       6        0.0%
   251                           ;!BITBANK1            50      0       0       7        0.0%
   252                           ;!BITSFR6              0      0       0       7        0.0%
   253                           ;!SFR6                 0      0       0       7        0.0%
   254                           ;!BANK1               50      0       0       8        0.0%
   255                           ;!BITSFR7              0      0       0       8        0.0%
   256                           ;!SFR7                 0      0       0       8        0.0%
   257                           ;!BITBANK2            50      0       0       9        0.0%
   258                           ;!BITSFR8              0      0       0       9        0.0%
   259                           ;!SFR8                 0      0       0       9        0.0%
   260                           ;!BANK2               50      0       0      10        0.0%
   261                           ;!BITSFR9              0      0       0      10        0.0%
   262                           ;!SFR9                 0      0       0      10        0.0%
   263                           ;!BITBANK3            50      0       0      11        0.0%
   264                           ;!BITSFR10             0      0       0      11        0.0%
   265                           ;!SFR10                0      0       0      11        0.0%
   266                           ;!BANK3               50      0       0      12        0.0%
   267                           ;!BITSFR11             0      0       0      12        0.0%
   268                           ;!SFR11                0      0       0      12        0.0%
   269                           ;!BITBANK4            50      0       0      13        0.0%
   270                           ;!BITSFR12             0      0       0      13        0.0%
   271                           ;!SFR12                0      0       0      13        0.0%
   272                           ;!BANK4               50      0       0      14        0.0%
   273                           ;!BITSFR13             0      0       0      14        0.0%
   274                           ;!SFR13                0      0       0      14        0.0%
   275                           ;!BITBANK5            50      0       0      15        0.0%
   276                           ;!BITSFR14             0      0       0      15        0.0%
   277                           ;!SFR14                0      0       0      15        0.0%
   278                           ;!BANK5               50      0       0      16        0.0%
   279                           ;!BITSFR15             0      0       0      16        0.0%
   280                           ;!SFR15                0      0       0      16        0.0%
   281                           ;!BITBANK6            10      0       0      17        0.0%
   282                           ;!BITSFR16             0      0       0      17        0.0%
   283                           ;!SFR16                0      0       0      17        0.0%
   284                           ;!BANK6               10      0       0      18        0.0%
   285                           ;!BITSFR17             0      0       0      18        0.0%
   286                           ;!SFR17                0      0       0      18        0.0%
   287                           ;!BITSFR18             0      0       0      19        0.0%
   288                           ;!SFR18                0      0       0      19        0.0%
   289                           ;!DATA                 0      0       0      19        0.0%
   290                           ;!BITSFR19             0      0       0      20        0.0%
   291                           ;!SFR19                0      0       0      20        0.0%
   292                           ;!BITSFR20             0      0       0      21        0.0%
   293                           ;!SFR20                0      0       0      21        0.0%
   294                           ;!BITSFR21             0      0       0      22        0.0%
   295                           ;!SFR21                0      0       0      22        0.0%
   296                           ;!BITSFR22             0      0       0      23        0.0%
   297                           ;!SFR22                0      0       0      23        0.0%
   298                           ;!BITSFR23             0      0       0      24        0.0%
   299                           ;!SFR23                0      0       0      24        0.0%
   300                           ;!BITSFR24             0      0       0      25        0.0%
   301                           ;!SFR24                0      0       0      25        0.0%
   302                           ;!BITSFR25             0      0       0      26        0.0%
   303                           ;!SFR25                0      0       0      26        0.0%
   304                           ;!BITSFR26             0      0       0      27        0.0%
   305                           ;!SFR26                0      0       0      27        0.0%
   306                           ;!BITSFR27             0      0       0      28        0.0%
   307                           ;!SFR27                0      0       0      28        0.0%
   308                           ;!BITSFR28             0      0       0      29        0.0%
   309                           ;!SFR28                0      0       0      29        0.0%
   310                           ;!BITSFR29             0      0       0      30        0.0%
   311                           ;!SFR29                0      0       0      30        0.0%
   312                           ;!BITSFR30             0      0       0      31        0.0%
   313                           ;!SFR30                0      0       0      31        0.0%
   314                           ;!BITSFR31             0      0       0      32        0.0%
   315                           ;!SFR31                0      0       0      32        0.0%
   316                           
   317                           	global	_main
   318                           
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 35 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  result          2    8[COMMON] int 
   326 ;; Return value:  Size  Location     Type
   327 ;;                  2   14[COMMON] int 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 17F/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   335 ;;      Params:         0       0       0       0       0       0       0       0
   336 ;;      Locals:         2       0       0       0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0
   338 ;;      Totals:         2       0       0       0       0       0       0       0
   339 ;;Total ram usage:        2 bytes
   340 ;; Hardware stack levels required when called:    2
   341 ;; This function calls:
   342 ;;		_delay
   343 ;;		_doMath
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1
   349                           global __pmaintext
   350  0766                     __pmaintext:
   351                           psect	maintext
   352                           	file	"main.c"
   353                           	line	35
   354                           	global	__size_of_main
   355  001D                     	__size_of_main	equ	__end_of_main-_main
   356                           	
   357  0766                     _main:	
   358                           	opt	stack 14
   359                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   360                           	line	36
   361                           	
   362  0766                     l559:	
   363                           ;main.c: 36: int result = 0;
   364  0766  01F8               	clrf	(main@result)
   365  0767  01F9               	clrf	(main@result+1)
   366                           	line	37
   367                           ;main.c: 37: TRISB = 0;
   368  0768  0021               	movlb 1	; select bank1
   369  0769  018D               	clrf	(141)^080h	;volatile
   370  076A  2F6B               	goto	l561
   371                           	line	38
   372                           ;main.c: 38: while (1)
   373                           	
   374  076B                     l15:	
   375                           	line	40
   376                           	
   377  076B                     l561:	
   378                           ;main.c: 39: {
   379                           ;main.c: 40: PORTB = 0x0F;
   380  076B  300F               	movlw	(0Fh)
   381  076C  0020               	movlb 0	; select bank0
   382  076D  008D               	movwf	(13)	;volatile
   383                           	line	41
   384                           	
   385  076E                     l563:	
   386                           ;main.c: 41: delay();
   387  076E  3187  27A7  3187   	fcall	_delay
   388                           	line	42
   389                           	
   390  0771                     l565:	
   391                           ;main.c: 42: PORTB = 0x00;
   392  0771  0020               	movlb 0	; select bank0
   393  0772  018D               	clrf	(13)	;volatile
   394                           	line	43
   395                           	
   396  0773                     l567:	
   397                           ;main.c: 43: delay();
   398  0773  3187  27A7  3187   	fcall	_delay
   399                           	line	44
   400                           	
   401  0776                     l569:	
   402                           ;main.c: 44: result = doMath();
   403  0776  3187  27D3  3187   	fcall	_doMath
   404  0779  0877               	movf	(1+(?_doMath)),w
   405  077A  01F9               	clrf	(main@result+1)
   406  077B  07F9               	addwf	(main@result+1)
   407  077C  0876               	movf	(0+(?_doMath)),w
   408  077D  01F8               	clrf	(main@result)
   409  077E  07F8               	addwf	(main@result)
   410                           
   411  077F  2F6B               	goto	l561
   412                           	line	45
   413                           	
   414  0780                     l16:	
   415                           	line	38
   416  0780  2F6B               	goto	l561
   417                           	
   418  0781                     l17:	
   419                           	line	47
   420                           ;main.c: 45: }
   421                           ;main.c: 46: return 0;
   422                           ;	Return value of _main is never used
   423                           	
   424  0781                     l18:	
   425                           	global	start
   426  0781  3180  2802         	ljmp	start
   427                           	opt stack 0
   428                           GLOBAL	__end_of_main
   429  0783                     	__end_of_main:
   430                           	signat	_main,90
   431                           	global	_delay
   432                           
   433 ;; *************** function _delay *****************
   434 ;; Defined at:
   435 ;;		line 16 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  counter         2    2[COMMON] int 
   440 ;;  clock           2    0[COMMON] int 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  2    6[COMMON] int 
   443 ;; Registers used:
   444 ;;		wreg, status,2, btemp+1
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   450 ;;      Params:         0       0       0       0       0       0       0       0
   451 ;;      Locals:         4       0       0       0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0       0
   453 ;;      Totals:         4       0       0       0       0       0       0       0
   454 ;;Total ram usage:        4 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           psect	text72,local,class=CODE,delta=2,merge=1
   463                           global __ptext72
   464  07A7                     __ptext72:
   465                           psect	text72
   466                           	file	"main.c"
   467                           	line	16
   468                           	global	__size_of_delay
   469  002C                     	__size_of_delay	equ	__end_of_delay-_delay
   470                           	
   471  07A7                     _delay:	
   472                           	opt	stack 15
   473                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   474                           	line	17
   475                           	
   476  07A7                     l491:	
   477                           ;main.c: 17: int counter = 0;
   478  07A7  01F2               	clrf	(delay@counter)
   479  07A8  01F3               	clrf	(delay@counter+1)
   480                           	line	18
   481                           ;main.c: 18: int clock = 0;
   482  07A9  01F0               	clrf	(delay@clock)
   483  07AA  01F1               	clrf	(delay@clock+1)
   484                           	line	19
   485                           ;main.c: 19: for (counter = 0; counter < 10000; counter++) {
   486  07AB  01F2               	clrf	(delay@counter)
   487  07AC  01F3               	clrf	(delay@counter+1)
   488                           	
   489  07AD                     l493:	
   490  07AD  0873               	movf	(delay@counter+1),w
   491  07AE  3A80               	xorlw	80h
   492  07AF  00FF               	movwf	btemp+1
   493  07B0  30A7               	movlw	(high(02710h))^80h
   494  07B1  027F               	subwf	btemp+1,w
   495  07B2  1D03               	skipz
   496  07B3  2FB6               	goto	u15
   497  07B4  3010               	movlw	low(02710h)
   498  07B5  0272               	subwf	(delay@counter),w
   499  07B6                     u15:
   500                           
   501  07B6  1C03               	skipc
   502  07B7  2FB9               	goto	u11
   503  07B8  2FBA               	goto	u10
   504  07B9                     u11:
   505  07B9  2FBC               	goto	l497
   506  07BA                     u10:
   507  07BA  2FD2               	goto	l9
   508                           	
   509  07BB                     l495:	
   510  07BB  2FD2               	goto	l9
   511                           	
   512  07BC                     l7:	
   513                           	line	20
   514                           	
   515  07BC                     l497:	
   516                           ;main.c: 20: clock++;
   517  07BC  3001               	movlw	low(01h)
   518  07BD  07F0               	addwf	(delay@clock),f
   519  07BE  3000               	movlw	high(01h)
   520  07BF  3DF1               	addwfc	(delay@clock+1),f
   521                           	line	19
   522  07C0  3001               	movlw	low(01h)
   523  07C1  07F2               	addwf	(delay@counter),f
   524  07C2  3000               	movlw	high(01h)
   525  07C3  3DF3               	addwfc	(delay@counter+1),f
   526                           	
   527  07C4                     l499:	
   528  07C4  0873               	movf	(delay@counter+1),w
   529  07C5  3A80               	xorlw	80h
   530  07C6  00FF               	movwf	btemp+1
   531  07C7  30A7               	movlw	(high(02710h))^80h
   532  07C8  027F               	subwf	btemp+1,w
   533  07C9  1D03               	skipz
   534  07CA  2FCD               	goto	u25
   535  07CB  3010               	movlw	low(02710h)
   536  07CC  0272               	subwf	(delay@counter),w
   537  07CD                     u25:
   538                           
   539  07CD  1C03               	skipc
   540  07CE  2FD0               	goto	u21
   541  07CF  2FD1               	goto	u20
   542  07D0                     u21:
   543  07D0  2FBC               	goto	l497
   544  07D1                     u20:
   545  07D1  2FD2               	goto	l9
   546                           	
   547  07D2                     l8:	
   548                           	line	23
   549                           ;main.c: 21: }
   550                           ;main.c: 22: return clock;
   551                           ;	Return value of _delay is never used
   552                           	
   553  07D2                     l9:	
   554  07D2  0008               	return
   555                           	opt stack 0
   556                           GLOBAL	__end_of_delay
   557  07D3                     	__end_of_delay:
   558                           	signat	_delay,90
   559                           	global	_doMath
   560                           
   561 ;; *************** function _doMath *****************
   562 ;; Defined at:
   563 ;;		line 26 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  result          2    6[BANK0 ] int 
   568 ;;  c               2    4[BANK0 ] int 
   569 ;;  b               2    2[BANK0 ] int 
   570 ;;  a               2    0[BANK0 ] int 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  2    6[COMMON] int 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   580 ;;      Params:         2       0       0       0       0       0       0       0
   581 ;;      Locals:         0       8       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0       0
   583 ;;      Totals:         2       8       0       0       0       0       0       0
   584 ;;Total ram usage:       10 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		___wmul
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           psect	text73,local,class=CODE,delta=2,merge=1
   594                           global __ptext73
   595  07D3                     __ptext73:
   596                           psect	text73
   597                           	file	"main.c"
   598                           	line	26
   599                           	global	__size_of_doMath
   600  002D                     	__size_of_doMath	equ	__end_of_doMath-_doMath
   601                           	
   602  07D3                     _doMath:	
   603                           	opt	stack 14
   604                           ; Regs used in _doMath: [wreg+status,2+status,0+pclath+cstack]
   605                           	line	27
   606                           	
   607  07D3                     l549:	
   608                           ;main.c: 27: int a = 1;
   609  07D3  3001               	movlw	low(01h)
   610  07D4  0020               	movlb 0	; select bank0
   611  07D5  00A0               	movwf	(doMath@a)
   612  07D6  3000               	movlw	high(01h)
   613  07D7  00A1               	movwf	((doMath@a))+1
   614                           	line	28
   615                           ;main.c: 28: int b = 2;
   616  07D8  3002               	movlw	low(02h)
   617  07D9  00A2               	movwf	(doMath@b)
   618  07DA  3000               	movlw	high(02h)
   619  07DB  00A3               	movwf	((doMath@b))+1
   620                           	line	29
   621                           ;main.c: 29: int c = 3;
   622  07DC  3003               	movlw	low(03h)
   623  07DD  00A4               	movwf	(doMath@c)
   624  07DE  3000               	movlw	high(03h)
   625  07DF  00A5               	movwf	((doMath@c))+1
   626                           	line	30
   627                           	
   628  07E0                     l551:	
   629                           ;main.c: 30: int result = 0;
   630  07E0  01A6               	clrf	(doMath@result)
   631  07E1  01A7               	clrf	(doMath@result+1)
   632                           	line	31
   633                           	
   634  07E2                     l553:	
   635                           ;main.c: 31: result = a + b * c;
   636  07E2  0823               	movf	(doMath@b+1),w
   637  07E3  01F1               	clrf	(?___wmul+1)
   638  07E4  07F1               	addwf	(?___wmul+1)
   639  07E5  0822               	movf	(doMath@b),w
   640  07E6  01F0               	clrf	(?___wmul)
   641  07E7  07F0               	addwf	(?___wmul)
   642                           
   643  07E8  0825               	movf	(doMath@c+1),w
   644  07E9  01F3               	clrf	1+(?___wmul)+02h
   645  07EA  07F3               	addwf	1+(?___wmul)+02h
   646  07EB  0824               	movf	(doMath@c),w
   647  07EC  01F2               	clrf	0+(?___wmul)+02h
   648  07ED  07F2               	addwf	0+(?___wmul)+02h
   649                           
   650  07EE  3187  2783  3187   	fcall	___wmul
   651  07F1  0020               	movlb 0	; select bank0
   652  07F2  0820               	movf	(doMath@a),w
   653  07F3  0770               	addwf	(0+(?___wmul)),w
   654  07F4  00A6               	movwf	(doMath@result)
   655  07F5  0821               	movf	(doMath@a+1),w
   656  07F6  3D71               	addwfc	(1+(?___wmul)),w
   657  07F7  00A7               	movwf	1+(doMath@result)
   658                           	line	32
   659                           	
   660  07F8                     l555:	
   661                           ;main.c: 32: return result;
   662  07F8  0827               	movf	(doMath@result+1),w
   663  07F9  01F7               	clrf	(?_doMath+1)
   664  07FA  07F7               	addwf	(?_doMath+1)
   665  07FB  0826               	movf	(doMath@result),w
   666  07FC  01F6               	clrf	(?_doMath)
   667  07FD  07F6               	addwf	(?_doMath)
   668                           
   669  07FE  2FFF               	goto	l12
   670                           	
   671  07FF                     l557:	
   672                           	line	33
   673                           	
   674  07FF                     l12:	
   675  07FF  0008               	return
   676                           	opt stack 0
   677                           GLOBAL	__end_of_doMath
   678  0800                     	__end_of_doMath:
   679                           	signat	_doMath,90
   680                           	global	___wmul
   681                           
   682 ;; *************** function ___wmul *****************
   683 ;; Defined at:
   684 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.00\sources\wmul.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  multiplier      2    0[COMMON] unsigned int 
   687 ;;  multiplicand    2    2[COMMON] unsigned int 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  product         2    4[COMMON] unsigned int 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2    0[COMMON] unsigned int 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   699 ;;      Params:         4       0       0       0       0       0       0       0
   700 ;;      Locals:         2       0       0       0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0       0       0       0
   702 ;;      Totals:         6       0       0       0       0       0       0       0
   703 ;;Total ram usage:        6 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_doMath
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           psect	text74,local,class=CODE,delta=2,merge=1
   712                           global __ptext74
   713  0783                     __ptext74:
   714                           psect	text74
   715                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.00\sources\wmul.c"
   716                           	line	3
   717                           	global	__size_of___wmul
   718  0024                     	__size_of___wmul	equ	__end_of___wmul-___wmul
   719                           	
   720  0783                     ___wmul:	
   721                           	opt	stack 14
   722                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   723                           	line	4
   724                           	
   725  0783                     l537:	
   726  0783  01F4               	clrf	(___wmul@product)
   727  0784  01F5               	clrf	(___wmul@product+1)
   728  0785  2F86               	goto	l539
   729                           	line	6
   730                           	
   731  0786                     l107:	
   732                           	line	7
   733                           	
   734  0786                     l539:	
   735  0786  1C70               	btfss	(___wmul@multiplier),(0)&7
   736  0787  2F89               	goto	u71
   737  0788  2F8A               	goto	u70
   738  0789                     u71:
   739  0789  2F8E               	goto	l108
   740  078A                     u70:
   741                           	line	8
   742                           	
   743  078A                     l541:	
   744  078A  0872               	movf	(___wmul@multiplicand),w
   745  078B  07F4               	addwf	(___wmul@product),f
   746  078C  0873               	movf	(___wmul@multiplicand+1),w
   747  078D  3DF5               	addwfc	(___wmul@product+1),f
   748                           	
   749  078E                     l108:	
   750                           	line	9
   751  078E  3001               	movlw	01h
   752                           	
   753  078F                     u85:
   754  078F  35F2               	lslf	(___wmul@multiplicand),f
   755  0790  0DF3               	rlf	(___wmul@multiplicand+1),f
   756  0791  0B89               	decfsz	wreg,f
   757  0792  2F8F               	goto	u85
   758                           	line	10
   759                           	
   760  0793                     l543:	
   761  0793  3001               	movlw	01h
   762                           	
   763  0794                     u95:
   764  0794  36F1               	lsrf	(___wmul@multiplier+1),f
   765  0795  0CF0               	rrf	(___wmul@multiplier),f
   766  0796  0B89               	decfsz	wreg,f
   767  0797  2F94               	goto	u95
   768                           	line	11
   769  0798  0871               	movf	((___wmul@multiplier+1)),w
   770  0799  0470               	iorwf	((___wmul@multiplier)),w
   771  079A  1D03               	skipz
   772  079B  2F9D               	goto	u101
   773  079C  2F9E               	goto	u100
   774  079D                     u101:
   775  079D  2F86               	goto	l539
   776  079E                     u100:
   777  079E  2F9F               	goto	l545
   778                           	
   779  079F                     l109:	
   780                           	line	12
   781                           	
   782  079F                     l545:	
   783  079F  0875               	movf	(___wmul@product+1),w
   784  07A0  01F1               	clrf	(?___wmul+1)
   785  07A1  07F1               	addwf	(?___wmul+1)
   786  07A2  0874               	movf	(___wmul@product),w
   787  07A3  01F0               	clrf	(?___wmul)
   788  07A4  07F0               	addwf	(?___wmul)
   789                           
   790  07A5  2FA6               	goto	l110
   791                           	
   792  07A6                     l547:	
   793                           	line	13
   794                           	
   795  07A6                     l110:	
   796  07A6  0008               	return
   797                           	opt stack 0
   798                           GLOBAL	__end_of___wmul
   799  07A7                     	__end_of___wmul:
   800                           	signat	___wmul,8314
   801                           psect	text75,local,class=CODE,delta=2,merge=1
   802                           global __ptext75
   803  0000                     __ptext75:
   804                           	global	btemp
   805  007E                     	btemp set 07Eh
   806                           
   807                           	DABS	1,126,2	;btemp
   808                           	global	wtemp0
   809  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      8       8
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ?_doMath	int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_delay	int  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_doMath
    _doMath->___wmul

Critical Paths under _main in BANK0

    _main->_doMath

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     222
                                              8 COMMON     2     2      0
                              _delay
                             _doMath
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      35
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _doMath                                              10     8      2     185
                                              6 COMMON     2     0      2
                                              0 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      92
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _doMath
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       2       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


HI-TECH Software PICC Macro Assembler V1.00 build 12136 
Symbol Table                                                                                   Thu Jun 21 09:42:28 2012

                   l7 07BC                     l8 07D2                     l9 07D2                    l12 07FF  
                  l15 076B                    l16 0780                    l17 0781                    l18 0781  
                  u10 07BA                    u11 07B9                    u20 07D1                    u21 07D0  
                  u15 07B6                    u25 07CD                    u70 078A                    u71 0789  
                  u85 078F                    u95 0794   ___wmul@multiplicand 0072                   l110 07A6  
                 l107 0786                   l108 078E                   l109 079F                   l541 078A  
                 l543 0793                   l551 07E0                   l545 079F                   l537 0783  
                 l553 07E2                   l561 076B                   l547 07A6                   l539 0786  
                 l555 07F8                   l491 07A7                   l563 076E                   l557 07FF  
                 l549 07D3                   l493 07AD                   l565 0771                   l495 07BB  
                 l567 0773                   l559 0766                   l497 07BC                   l569 0776  
                 l499 07C4                   u100 079E                   u101 079D                   wreg 0009  
                _main 0766                  btemp 007E                  start 0002                 ?_main 0070  
               _PORTB 000D                 _TRISB 008D                 _delay 07A7                 wtemp0 007E  
        __end_of_main 0783                ??_main 0078                ?_delay 0070                ___wmul 0783  
              _doMath 07D3        __pcstackCOMMON 0070         __end_of_delay 07D3               ??_delay 0070  
          __pmaintext 0766               ?___wmul 0070               ?_doMath 0076       __size_of___wmul 0024  
     __size_of_doMath 002D               doMath@a 0020               doMath@b 0022               doMath@c 0024  
          delay@clock 0070  end_of_initialization 0763            main@result 0078        __end_of___wmul 07A7  
      __end_of_doMath 0800          doMath@result 0026   start_initialization 0763              ??___wmul 0074  
            ??_doMath 0078         __pcstackBANK0 0020        __size_of_delay 002C          delay@counter 0072  
      ___wmul@product 0074     ___wmul@multiplier 0070              __ptext71 0000              __ptext72 07A7  
            __ptext73 07D3              __ptext74 0783              __ptext75 0000         __size_of_main 001D  
